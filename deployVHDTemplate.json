{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
			}
		},
		"_artifactsLocationVHDTemplate": {
			"defaultValue": "[if(contains(parameters('_artifactsLocation'), 'githubusercontent'), parameters('_artifactsLocation'), deployment().properties.templateLink.uri)]",
			"type": "string",
			"metadata": {
				"description": "If we are deploying from the command line, use the passed in _artifactsLocation, otherwise use the default."
			}
		},
		"diskName": {
			"type": "string",
			"defaultValue": "wlsdisk"
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"sku": {
			"type": "string",
			"defaultValue": "Premium_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Premium_LRS",
				"StandardSSD_LRS",
				"UltraSSD_LRS",
				"Premium_ZRS",
				"StandardSSD_ZRS"
			],
			"metadata": {
				"description": "The disks sku name."
			}
		},
		"diskSizeGb": {
			"type": "int",
			"defaultValue": 32
		},
		"sourceUri": {
			"type": "string",
			"metadata": {
				"description": "Blob URI for VHD file."
			}
		},
		"createOption": {
			"type": "string",
			"defaultValue": "import"
		},
		"hyperVGeneration": {
			"type": "string",
			"defaultValue": "V1"
		},
		"networkAccessPolicy": {
			"type": "string",
			"defaultValue": "AllowAll"
		},
		"guidValue": {
			"type": "string",
			"defaultValue": "[newGuid()]"
		},
		"vmName": {
			"type": "string",
			"defaultValue": "WeblogicServerVM",
			"metadata": {
				"description": "VM name."
			}
		},
		"vmSizeSelect": {
			"type": "string",
			"defaultValue": "Standard_D2as_v4",
			"metadata": {
				"description": "Select appropriate VM Size as per requirement"
			}
		},
		"adminPasswordOrKey": {
			"type": "securestring",
			"metadata": {
				"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
			}
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "User name for the Virtual Machine."
			}
		},
		"authenticationType": {
			"type": "string",
			"defaultValue": "password",
			"allowedValues": [
				"sshPublicKey",
				"password"
			],
			"metadata": {
				"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
			}
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Provide storage account name where VHD file is available."
			}
		},
		"testPropertyFile": {
			"type": "string",
			"metadata": {
				"description": "Provide test property filename"
			}
		}
	},
	"variables": {
		"name_storageAccount": "[concat(take(replace(parameters('guidValue'),'-',''),6),'olvm')]",
		"portsToExpose": "22,80,443,7001-9000",
		"const_requiredPortrange": ",65200-65535,5556",
		"const_vmSize": "[parameters('vmSizeSelect')]",
		"const_storageAccountType": "Standard_LRS",
		"name_diskName": "[concat('wlsdisk-',parameters('guidValue'))]",
		"name_osType": "Linux",
		"name_nic": "olvm_NIC",
		"name_publicIPAddress": "olvm_PublicIP",
		"const_publicIPAddressType": "Dynamic",
		"name_vmLabelPrefix": "wlsvm",
		"name_virtualNetwork": "olvm_VNET",
		"const_addressPrefix": "10.0.0.0/16",
		"const_subnetPrefix": "10.0.0.0/24",
		"name_networkSecurityGroup": "[concat(variables('name_vmLabelPrefix'), '-nsg')]",
		"ref_networkSecurityGroup": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('name_networkSecurityGroup'))]",
		"name_subnet": "Subnet",
		"name_testScript": "testBaseVM.sh",
		"output_extensions": "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'),'/extensions/runtests')]",
		"ref_subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('name_virtualNetwork'), variables('name_subnet'))]",
		"const_linuxConfiguration": {
			"disablePasswordAuthentication": true,
			"ssh": {
				"publicKeys": [
					{
						"path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
						"keyData": "[parameters('adminPasswordOrKey')]"
					}
				]
			}
		}
	},
	"resources": [
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2021-06-01",
			"name": "[variables('name_networkSecurityGroup')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "CustomPorts",
						"properties": {
							"protocol": "TCP",
							"sourcePortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 320,
							"direction": "Inbound",
							"destinationPortRanges": "[split(concat(variables('portsToExpose'),variables('const_requiredPortrange')), ',')]"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2021-08-01",
			"name": "[variables('name_storageAccount')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "[variables('const_storageAccountType')]"
			},
			"kind": "Storage",
			"properties": {
			}
		},
		{
			"apiVersion": "2021-08-01",
			"type": "Microsoft.Compute/disks",
			"name": "[variables('name_diskName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/', variables('name_storageAccount'))]",
				"[resourceId('Microsoft.Network/virtualNetworks/', variables('name_virtualNetwork'))]"
			],
			"properties": {
				"osType": "[variables('name_osType')]",
				"creationData": {
					"createOption": "[parameters('createOption')]",
					"sourceUri": "[parameters('sourceUri')]",
					"storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts/',parameters('storageAccountName'))]"
				},
				"diskSizeGB": "[parameters('diskSizeGb')]",
				"hyperVGeneration": "[parameters('hyperVGeneration')]",
				"networkAccessPolicy": "[parameters('networkAccessPolicy')]"
			},
			"sku": {
				"name": "[parameters('sku')]"
			},
			"tags": {
			}
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2021-06-01",
			"name": "[variables('name_publicIPAddress')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('const_publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[concat(toLower(variables('name_vmLabelPrefix')),'-',take(replace(parameters('guidValue'),'-',''),10))]"
				}
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2021-06-01",
			"name": "[variables('name_virtualNetwork')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('ref_networkSecurityGroup')]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('const_addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('name_subnet')]",
						"properties": {
							"addressPrefix": "[variables('const_subnetPrefix')]",
							"networkSecurityGroup": {
								"id": "[variables('ref_networkSecurityGroup')]"
							}
						}
					}
				]
			}
		},
		{
			"apiVersion": "2021-06-01",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('name_nic')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks/', variables('name_virtualNetwork'))]",
				"[resourceId('Microsoft.Network/publicIPAddresses/', variables('name_publicIPAddress'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('name_publicIPAddress'))]"
							},
							"subnet": {
								"id": "[variables('ref_subnet')]"
							}
						}
					}
				],
				"dnsSettings": {
					"internalDnsNameLabel": "[parameters('vmName')]"
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2021-11-01",
			"name": "[parameters('vmName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/', variables('name_storageAccount'))]",
				"[resourceId('Microsoft.Network/networkInterfaces/', variables('name_nic'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[variables('const_vmSize')]"
				},
				"storageProfile": {
					"osDisk": {
						"createOption": "attach",
						"osType": "Linux",
						"managedDisk": {
							"id": "[resourceId('Microsoft.Compute/disks',variables('name_diskName'))]"
						}
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('name_nic'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('name_storageAccount')), '2021-08-01').primaryEndpoints.blob]"
					}
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2021-07-01",
			"name": "[concat(parameters('vmName'),'/enablevmaccess')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines',parameters('vmName'))]"
			],
			"properties": {
				"autoUpgradeMinorVersion": true,
				"publisher": "Microsoft.OSTCExtensions",
				"type": "VMAccessForLinux",
				"typeHandlerVersion": "1.4",
				"settings": {
				},
				"protectedSettings": {
					"username": "[parameters('adminUsername')]",
					"password": "[parameters('adminPasswordOrKey')]"
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2021-07-01",
			"name": "[concat(parameters('vmName'),'/runtests')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines',parameters('vmName'))]"
			],
			"properties": {
				"autoUpgradeMinorVersion": true,
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"settings": {
					"fileUris": [
						"https://raw.githubusercontent.com/sanjaymantoor/wls-image-builder/master/testBaseVM.sh"
					]
				},
				"protectedSettings": {
					"commandToExecute": "[concat('sh',' ','testBaseVM.sh',' <<< \"',parameters('testPropertyFile'),'\"')]"
				}
			}
		}
	],
	"outputs": {
		"testStatusCode": {
			"type": "string",
			"value": "[reference(variables('output_extensions')).instanceView.statuses[0].code]"
		},
		"testLevelCode": {
			"type": "string",
			"value": "[reference(variables('output_extensions')).instanceView.statuses[0].level]"
		},
		"testDisplayStatus": {
			"type": "string",
			"value": "[reference(variables('output_extensions')).instanceView.statuses[0].displayStatus]"
		},
		"testResults":{
			"type": "string",
			"value": "[reference(variables('output_extensions')).instanceView.statuses[0].message]"
		}
	}
}
